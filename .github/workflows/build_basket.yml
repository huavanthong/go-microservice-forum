name: Build Basket Microservice

on: 
  push:
    branches: [ "basket-service" ]
    tags:
      - "*.*.*"
      
  pull_request:
    types:
      - closed
      - opened
      - synchronize
    branches: [ "master" ]

  workflow_dispatch:

  repository_dispatch:
    types:
      - Trigger Workflow

  workflow_call:
    inputs:
      ref:
        required: false
        type: string

env:
  GH_TOKEN: ${{ github.token }}

jobs:
  build-linux:
    name: Build Basket Linux
    runs-on: ubuntu-latest
    if: ${{ ! failure() && ! cancelled() }}
    steps:
      - name: Display Event Data
        run: |
          echo "Event data:"
          cat $GITHUB_EVENT_PATH
          echo "Output from Extract Data: ${{ steps.get-ref.outputs.repository}}"
          echo "Output from Extract Data: ${{ steps.get-ref.outputs.outputs.branch }}"
     
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies and set environment variables
        run: |
          # Environment variable for trigger process
          echo "REPOSITORY=${{ steps.get-ref.outputs.repository}}" >> $GITHUB_ENV
          echo "PULL_MERGE_BRANCH=${{ steps.get-ref.outputs.outputs.branch }}" >> $GITHUB_ENV

      - name: Set working directory
        run: |
          ls -al
          # export REPOSITORY="${{steps.get-ref.outputs.repository}}"
          # export PULL_MERGE_BRANCH="${{steps.get-ref.outputs.branch}}"
          echo "Check new at here: $REPOSITORY $PULL_MERGE_BRANCH"
          echo "TEST_VERSION=my/version/here" >> $GITHUB_ENV
          echo "TEST_DATE=$(date +%m.%Y)" >> $GITHUB_ENV

          echo "$REPOSITORY $PULL_MERGE_BRANCH"
          chmod +x update_repos.sh
          ./update_repos.sh
          cat ./config/repositories.conf

      - name: Check next step
        run: |
          echo "Check 1 here: $REPOSITORY $PULL_MERGE_BRANCH"
          echo "Check 2 here: $TEST_VERSION $TEST_DATE"

      - name: Upload Log Artifact
        uses: actions/upload-artifact@v2
        with:
          name: log-artifact
          path: ${{ runner.workspace }}/microservice-golang/src/Services/Basket/mylog.txt

      - name: Fetch required Go modules
        run:  go mod download

      - name: Build
        run:
          go build -o basket-api .\cmd\basket-api\main.go

      - name: Test
        run: |
          go test -v ./...

      - name: Build and Push Docker Image
        id:   docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  build-windows:
    name: Build Basket Window
    runs-on: windows-latest
    if: ${{ ! failure() && ! cancelled() }}
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Set working directory
        shell: cmd
        run: |
          dir

          python hello.py 2>&1 output.txt

          set "exit_code=%errorlevel%"
          
          echo %exit_code%

          echo " HELLLO2"

          if %exit_code% == 1 (
              echo " HELLLO4"
              exit /b 1
          )

          cd ./src/Services/Basket
          dir

      - name: Fetch required Go modules
        run:  go mod download

      - name: Build
        run:  go build -o basket-api.exe .\cmd\basket-api\main.go

      - name: Test
        run: |
          go test -v .\test\internal\domain\repositories\Basket.repository_test.go > result.txt
          mkdir logfile
          mv result.txt
          ls -la
      
      - name: Upload test result as artifact
        if: success() || failure()
        uses: actions/upload-artifact@v3
        with:
          name: log-result
          path: ${{ runner.workspace }}/src/Services/Basket/logfile/*

      - name: Build and Push Docker Image
        id:   docker_build
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      