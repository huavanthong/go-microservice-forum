basePath: /api/v1
definitions:
  models.CreateBasketRequest:
    properties:
      user_id:
        example: "1234567890"
        type: string
      user_name:
        example: hvthong
        type: string
    required:
    - user_id
    - user_name
    type: object
  models.Item:
    properties:
      image_url:
        example: default.png
        type: string
      price:
        example: 1400
        type: number
      product_id:
        type: string
      product_name:
        example: phone
        type: string
      quantity:
        example: 1
        minimum: 1
        type: integer
    required:
    - product_id
    - product_name
    - quantity
    type: object
  models.UpdateBasketRequest:
    properties:
      basket_id:
        example: 642fedd2ce582b2d899aa602
        type: string
      items:
        items:
          $ref: '#/definitions/models.Item'
        type: array
      user_id:
        example: "1234567890"
        type: string
      user_name:
        example: hvthong
        type: string
    required:
    - user_id
    - user_name
    type: object
  response.APIError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      error:
        $ref: '#/definitions/response.APIError'
      success:
        type: boolean
    type: object
host: localhost:8001
info:
  contact: {}
  description: List APIs of Basket Service
  termsOfService: http://swagger.io/terms/
  title: Basket Service API Document
  version: "1.0"
paths:
  /Basket/{userName}:
    get:
      consumes:
      - application/json
      description: Checkout basket
      parameters:
      - description: Basket Checkout
        in: body
        name: basketCheckout
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Checkout basket after completed items in shopping cart
      tags:
      - basket
  /basket:
    patch:
      consumes:
      - application/json
      description: Update basket by user id
      parameters:
      - description: Update Basket
        in: body
        name: basket
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBasketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Update basket by user id
      tags:
      - basket
    post:
      consumes:
      - application/json
      description: Create basket by user id
      parameters:
      - description: New Basket
        in: body
        name: basket
        required: true
        schema:
          $ref: '#/definitions/models.CreateBasketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Create basket by user id
      tags:
      - basket
  /basket/{userName}:
    delete:
      consumes:
      - application/json
      description: Delete basket by user id
      parameters:
      - description: userName
        in: path
        name: userName
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete basket by user id
      tags:
      - basket
  /basket/{userid}:
    get:
      consumes:
      - application/json
      description: Get basket by user id
      parameters:
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.Response'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Get basket by user id
      tags:
      - basket
swagger: "2.0"
